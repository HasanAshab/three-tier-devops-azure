name: Docker Build Scan and Push
description: Builds and pushes Docker images with metadata and security scanning
inputs:
  suffix:
    description: "Suffix for image name (e.g., frontend/backend)"
    required: true
  registry:
    description: "Container registry URL (e.g., ghcr.io)"
    required: true
  github_token:
    description: "GitHub Token"
    required: true

outputs:
  image_ref:
    description: "Full Docker image reference with tag"
    value: ${{ steps.set_output.outputs.image_ref }}
  image_tag:
    description: "Full image tag"
    value: ${{ steps.set_output.outputs.image_tag }}
  image_tag_short:
    description: "Short SHA-based image tag"
    value: ${{ steps.set_output.outputs.image_tag_short }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Set variables
      id: vars
      shell: bash
      run: |
        prefix=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')
        echo "image_name=$prefix-${{ inputs.suffix }}" >> "$GITHUB_OUTPUT"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ steps.vars.outputs.image_name }}
        tags: |
          type=sha,format=long
          type=ref,event=branch
          latest

    - name: Build docker image
      uses: docker/build-push-action@v6
      with:
        context: src/${{ inputs.suffix }}
        push: false
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set image tag outputs
      id: set_output
      shell: bash
      env:
        DOCKER_METADATA: ${{ steps.meta.outputs.json }}
      run: |
        full_ref=$(echo "$DOCKER_METADATA" | jq -r '.tags[] | select(test(":sha-"))' | head -n 1)
        full_tag="${full_ref##*:}"
        short_tag=$(echo "$full_tag" | cut -c5-11)
        echo "image_tag=$full_tag" >> "$GITHUB_OUTPUT"
        echo "image_tag_short=$short_tag" >> "$GITHUB_OUTPUT"
        echo "image_ref=${{ inputs.registry }}/${{ steps.vars.outputs.image_name }}:$full_tag" >> "$GITHUB_OUTPUT"

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.set_output.outputs.image_ref }}
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Push docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: src/${{ inputs.suffix }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
